<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Complexity on 随记</title><link>/tags/complexity/</link><description>Recent content in Complexity on 随记</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 25 Jan 2023 21:00:00 +0800</lastBuildDate><atom:link href="/tags/complexity/index.xml" rel="self" type="application/rss+xml"/><item><title>走出焦油坑</title><link>/posts/out-of-tar-pit/</link><pubDate>Wed, 25 Jan 2023 21:00:00 +0800</pubDate><guid>/posts/out-of-tar-pit/</guid><description>&lt;p&gt;Nubank 收购 Clojure 语言背后的公司 Cognitect 时发表的&lt;a href="https://building.nubank.com.br/welcoming-cognitect-nubank/"&gt;一篇文章&lt;/a&gt;引用了《&lt;a href="https://github.com/papers-we-love/papers-we-love/blob/master/design/out-of-the-tar-pit.pdf"&gt;走出焦油坑&lt;/a&gt;》这篇论文，看完还是有点收获的，记录点笔记。&lt;/p&gt;
&lt;p&gt;程序的复杂度在于 state 和 control，control指命令式的分支、循环，一步步执行代码。OOP 在这两方面都很差，封装和修改导致状态难以跟踪，Functional Programming 因强调 immutability 减少了 state 方面的复杂度，Logical Programming 因强调做什么(logic)而非怎么做(control)减少了 control 方面的复杂度，由此受启发，应对复杂度有两条路：&lt;/p&gt;</description></item></channel></rss>