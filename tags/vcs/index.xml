<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VCS on 随记</title><link>/tags/vcs/</link><description>Recent content in VCS on 随记</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 15 Oct 2025 22:00:00 +0800</lastBuildDate><atom:link href="/tags/vcs/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 的替代品</title><link>/posts/git-replacements/</link><pubDate>Wed, 15 Oct 2025 22:00:00 +0800</pubDate><guid>/posts/git-replacements/</guid><description>&lt;h2 id="git-vs-mercurial"&gt;Git vs. Mercurial&lt;/h2&gt;
&lt;p&gt;GIT 在当年的 &lt;a href="https://subversion.apache.org/"&gt;Subversion&lt;/a&gt;、&lt;del&gt;&lt;a href="https://www.bitkeeper.org/"&gt;BitKeeper&lt;/a&gt;&lt;/del&gt;、&lt;del&gt;&lt;a href="https://github.com/graydon/monotone"&gt;Monotone&lt;/a&gt;&lt;/del&gt; 、&lt;del&gt;&lt;a href="https://www.gnu.org/software/gnu-arch/"&gt;Arch&lt;/a&gt;&lt;/del&gt;、&lt;del&gt;&lt;a href="https://launchpad.net/bzr"&gt;Bazaar&lt;/a&gt;&lt;/del&gt;、&lt;a href="https://www.mercurial-scm.org/"&gt;Mercurial&lt;/a&gt;、&lt;a href="https://darcs.net/"&gt;Darcs&lt;/a&gt; 、&lt;a href="https://www.fossil-scm.org/home/doc/trunk/www/index.wiki"&gt;Fossil&lt;/a&gt; 版本控制系统纷争中脱颖而出，成为绝对主流，但对 Git 的质疑从未停止过，其复杂、繁多、晦涩的命令，奇怪的 staged area、stash、rebase、detached heads，难用的 submodule 和 partial clone、sparse checkout、&lt;a href="https://git-lfs.com/"&gt;LFS&lt;/a&gt;、&lt;a href="https://git-annex.branchable.com/"&gt;Annex&lt;/a&gt;、&lt;a href="https://git-scm.com/docs/large-object-promisors"&gt;LOP&lt;/a&gt;，虽然这些年 Git 一直在改善，但要么积习难改繁上加繁，要么知者甚少依然晦涩，因此不断有人试图造轮子替代 Git，如 &lt;a href="https://www.gameoftrees.org/"&gt;Got&lt;/a&gt;，&lt;del&gt;&lt;a href="https://github.com/gitless-vcs/gitless"&gt;Gitless&lt;/a&gt;&lt;/del&gt;，本文简要介绍三个有潜力的替代品 &lt;a href="https://jj-vcs.github.io/jj/latest/"&gt;Jujutsu&lt;/a&gt;、&lt;a href="https://sapling-scm.com/"&gt;Sapling&lt;/a&gt; 和 &lt;a href="https://pijul.org/"&gt;Pijul&lt;/a&gt;，它们不仅仅是对 Git CLI 的简化，而是从使用流程、思维上有了很大革新，其中 Jujutsu 和 Sapling 支持 Git 存储格式和网络协议，但 UI 体验向 Mercurial 靠齐，也可以一定程度上说 Mercurial 赢在了最后！&lt;/p&gt;</description></item></channel></rss>